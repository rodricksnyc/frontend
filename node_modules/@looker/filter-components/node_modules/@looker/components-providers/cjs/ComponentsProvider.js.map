{"version":3,"sources":["../../src/ComponentsProvider.tsx"],"names":["ComponentsProvider","children","loadFontSources","loadGoogleFonts","disableStyleDefender","dateLocale","locale","resources","themeCustomizations","props","theme","draft","defaultTheme","fontSources","url","ConditionalStyleDefender","Fragment","StyleDefender"],"mappings":";;;;;;;;;;;;;AA0BA;;AAMA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AAEA;;AACA;;;;;;;;;;;;;;AA4CO,MAAMA,kBAA+C,GAAG,QAUzD;AAAA,MATJC,QASI,QATJA,QASI;AAAA,kCARJC,eAQI;AAAA,MARJA,eAQI,qCARc,IAQd;AAAA,kCAPJC,eAOI;AAAA,MAPJA,eAOI,qCAPc,KAOd;AAAA,mCANJC,oBAMI;AAAA,MANJA,oBAMI,sCANmB,KAMnB;AAAA,MALJC,UAKI,QALJA,UAKI;AAAA,MAJJC,MAII,QAJJA,MAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,mBAEI,QAFJA,mBAEI;AAAA,MADDC,KACC;;AACJ,QAAMC,KAAK,GAAG,oBAAQ,MAAM;AAC1B,UAAMC,KAAK,GAAG,iCACZF,KAAK,CAACC,KAAN,IAAeE,mBADH,EAEZJ,mBAFY,CAAd;;AAKA,QAAIL,eAAJ,EAAqB;AACnBQ,MAAAA,KAAK,CAACE,WAAN,GAAoB,CAClB,IAAIF,KAAK,CAACE,WAAN,IAAqB,EAAzB,CADkB,EAElB;AAAEC,QAAAA,GAAG,EAAE,iCAAcH,KAAd;AAAP,OAFkB,CAApB;AAID;;AAED,WAAOA,KAAP;AACD,GAda,EAcX,CAACF,KAAK,CAACC,KAAP,EAAcP,eAAd,EAA+BK,mBAA/B,CAdW,CAAd;AAgBA,qBAAQ;AAAEH,IAAAA,UAAF;AAAcC,IAAAA,MAAd;AAAsBC,IAAAA;AAAtB,GAAR;AAEA,QAAMQ,wBAAwB,GAAGX,oBAAoB,GACjDY,eADiD,GAEjDC,4BAFJ;AAIA,SACE,6BAAC,gCAAD,QACE,6BAAC,4BAAD,eAAmBR,KAAnB;AAA0B,IAAA,KAAK,EAAEC;AAAjC,MACE,6BAAC,wBAAD,QACGR,eAAe,IAAI,6BAAC,8BAAD,OADtB,EAEE,6BAAC,4BAAD,QACE,6BAAC,8BAAD,QAAqBD,QAArB,CADF,CAFF,CADF,CADF,CADF;AAYD,CA7CM","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2022 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport {\n  generateTheme,\n  googleFontUrl,\n  theme as defaultTheme,\n} from '@looker/design-tokens'\nimport type { FC } from 'react'\nimport React, { Fragment, useMemo } from 'react'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { FocusTrapProvider } from './FocusTrap'\nimport { ScrollLockProvider } from './ScrollLock'\nimport type { UseI18nProps } from './I18n'\nimport { useI18n } from './I18n'\nimport type { ThemeProviderProps } from './ThemeProvider'\nimport { ThemeProvider } from './ThemeProvider'\nimport type { ExtendComponentsTheme } from './ExtendComponentsProvider'\nimport { FontFaceLoader } from './FontFaceLoader'\nimport { StyleDefender } from './StyleDefender'\nexport interface ComponentsProviderProps\n  extends ThemeProviderProps,\n    ExtendComponentsTheme,\n    UseI18nProps {\n  /**\n   * Load any font faces specified on theme.fontSources\n   * @default true\n   */\n  loadFontSources?: boolean\n  /**\n   * Load fonts from the Google Fonts CDN if not already available\n   * @default false\n   */\n  loadGoogleFonts?: boolean\n\n  /**\n   * Disables the \"StyleDefender\"\n   *\n   * StyledDefender is a utility component that attempts to ensure that a few common\n   * styles are injected at any point where @looker/components are injected into the DOM.\n   * When taking code-snapshots (a pattern we generally discourage) the `StyleDefender`\n   * may be visible in output so we generally recommend disabling it for those use-cases.\n   *\n   * @default false\n   */\n  disableStyleDefender?: boolean\n}\n\n/**\n * ComponentsProvider registers fundamental infrastructure for @looker/components to\n * initialize its components. Most components assume that they will be wrapped in a\n * <ComponentsProvider> to be able to successfully initialize.\n *\n * It provides a variety of features including\n *   - ThemeProvider\n *   - ScrollLockProvider\n *\n * Optionally, in also includes\n *   - Internet Explorer 11 compatible styles\n *   - Global style registration\n *   - GoogleFont loading\n *\n */\nexport const ComponentsProvider: FC<ComponentsProviderProps> = ({\n  children,\n  loadFontSources = true,\n  loadGoogleFonts = false,\n  disableStyleDefender = false,\n  dateLocale,\n  locale,\n  resources,\n  themeCustomizations,\n  ...props\n}) => {\n  const theme = useMemo(() => {\n    const draft = generateTheme(\n      props.theme || defaultTheme,\n      themeCustomizations\n    )\n\n    if (loadGoogleFonts) {\n      draft.fontSources = [\n        ...(draft.fontSources || []),\n        { url: googleFontUrl(draft) },\n      ]\n    }\n\n    return draft\n  }, [props.theme, loadGoogleFonts, themeCustomizations])\n\n  useI18n({ dateLocale, locale, resources })\n\n  const ConditionalStyleDefender = disableStyleDefender\n    ? Fragment\n    : StyleDefender\n\n  return (\n    <HelmetProvider>\n      <ThemeProvider {...props} theme={theme}>\n        <ConditionalStyleDefender>\n          {loadFontSources && <FontFaceLoader />}\n          <FocusTrapProvider>\n            <ScrollLockProvider>{children}</ScrollLockProvider>\n          </FocusTrapProvider>\n        </ConditionalStyleDefender>\n      </ThemeProvider>\n    </HelmetProvider>\n  )\n}\n"],"file":"ComponentsProvider.js"}