import "core-js/modules/es.string.small.js";
import "core-js/modules/es.array.concat.js";
import "core-js/modules/es.array.fill.js";
import React, { useContext } from 'react';
import { ThemeContext } from 'styled-components';
import { DataContext } from '@visx/xychart';
import { LegendOrdinal } from '@visx/legend';
import partial from 'lodash/partial';
import { seriesLabelFormatter } from '../utils';
var DEFAULT_LEGEND_WIDTH = 200;
export var XYLegend = function XYLegend(_ref) {
  var config = _ref.config,
      fields = _ref.fields;

  var _useContext = useContext(DataContext),
      colorScale = _useContext.colorScale,
      visxTheme = _useContext.theme,
      margin = _useContext.margin;

  var _useContext2 = useContext(ThemeContext),
      small = _useContext2.space.small;

  var legend = config.legend;

  if (!legend) {
    return React.createElement(React.Fragment, null);
  }

  var yAxisSpacer = margin === null || margin === void 0 ? void 0 : margin.left;

  var _ref2 = legend.position === 'left' || legend.position === 'right' ? {
    direction: 'column',
    width: DEFAULT_LEGEND_WIDTH
  } : {
    direction: 'row',
    width: "calc(100% - ".concat(yAxisSpacer, ")")
  },
      direction = _ref2.direction,
      width = _ref2.width;

  return React.createElement(LegendOrdinal, {
    direction: direction,
    itemMargin: "0 ".concat(small, " ").concat(small, " ").concat(small),
    labelFormat: partial(seriesLabelFormatter, fields, config),
    style: {
      color: visxTheme === null || visxTheme === void 0 ? void 0 : visxTheme.svgLabelBig.fill,
      display: 'flex',
      justifyContent: 'center',
      marginLeft: yAxisSpacer,
      width: width
    },
    scale: colorScale,
    shape: "line"
  });
};
//# sourceMappingURL=XYLegend.js.map