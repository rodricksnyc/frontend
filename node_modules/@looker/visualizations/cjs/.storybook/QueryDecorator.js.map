{"version":3,"sources":["../../../src/.storybook/QueryDecorator.tsx"],"names":["QueryDecorator","Story","config","mockSdkConfigResponse","ok","loading","data","mockSdkDataResponse","fields","mockSdkFieldsResponse"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAMA;;;;;;;;;;AAEO,MAAMA,cAAc,GAAIC,KAAD,IAAkB;AAC9C,SACE,6BAAC,oCAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,oBAAOC,6CAAP,CADD;AAELC,MAAAA,EAAE,EAAE,IAFC;AAGLC,MAAAA,OAAO,EAAE,KAHJ;AAILC,MAAAA,IAAI,EAAE,qCAAgB,CAAC,GAAGC,2CAAJ,CAAhB,CAJD;AAKLC,MAAAA,MAAM,oBAAOC,6CAAP;AALD;AADT,KASE,6BAAC,KAAD,OATF,CADF;AAaD,CAdM","sourcesContent":["import React from 'react'\nimport type { Story } from '@storybook/react/types-6-0'\nimport {\n  mockSdkConfigResponse,\n  mockSdkFieldsResponse,\n  mockSdkDataResponse,\n  QueryContext,\n} from '@looker/visualizations-adapters'\nimport { Fields, tabularResponse } from '@looker/visualizations'\n\nexport const QueryDecorator = (Story: Story) => {\n  return (\n    <QueryContext.Provider\n      value={{\n        config: { ...mockSdkConfigResponse },\n        ok: true,\n        loading: false,\n        data: tabularResponse([...mockSdkDataResponse]),\n        fields: { ...mockSdkFieldsResponse } as Fields,\n      }}\n    >\n      <Story />\n    </QueryContext.Provider>\n  )\n}\n"],"file":"QueryDecorator.js"}