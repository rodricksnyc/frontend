"use strict";

require("core-js/modules/es.array.iterator.js");

require("core-js/modules/es.weak-map.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.QueryFormatter = void 0;

var _react = _interopRequireWildcard(require("react"));

var _components = require("@looker/components");

var _styledComponents = require("styled-components");

var _visualizationsAdapters = require("@looker/visualizations-adapters");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const QueryFormatter = props => {
  const children = props.children;

  const _useContext = (0, _react.useContext)(_visualizationsAdapters.QueryContext),
        ok = _useContext.ok,
        _useContext$data = _useContext.data,
        data = _useContext$data === void 0 ? [] : _useContext$data,
        fields = _useContext.fields,
        rawConfigWithOverrides = _useContext.config,
        loading = _useContext.loading,
        totals = _useContext.totals;

  const theme = (0, _react.useContext)(_styledComponents.ThemeContext);

  if (!theme) {
    return _react.default.createElement(_components.ComponentsProvider, null, _react.default.createElement(QueryFormatter, props));
  }

  if (loading) {
    return _react.default.createElement(_components.Space, {
      justifyContent: "center",
      p: "small"
    }, _react.default.createElement(_components.ProgressCircular, null));
  }

  if (data && rawConfigWithOverrides && fields) {
    const config = (0, _visualizationsAdapters.buildChartConfig)({
      config: rawConfigWithOverrides,
      data,
      fields
    });
    return _react.default.cloneElement(children, {
      config,
      data,
      fields,
      totals: (0, _visualizationsAdapters.formatTotals)(totals),
      ok
    });
  } else {
    return null;
  }
};

exports.QueryFormatter = QueryFormatter;
//# sourceMappingURL=QueryFormatter.js.map