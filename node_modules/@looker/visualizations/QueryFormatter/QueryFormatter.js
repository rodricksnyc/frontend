import React, { useContext } from 'react';
import { Space, ProgressCircular, ComponentsProvider } from '@looker/components';
import { ThemeContext } from 'styled-components';
import { formatTotals, QueryContext, buildChartConfig } from '@looker/visualizations-adapters';
export var QueryFormatter = function QueryFormatter(props) {
  var children = props.children;

  var _useContext = useContext(QueryContext),
      ok = _useContext.ok,
      _useContext$data = _useContext.data,
      data = _useContext$data === void 0 ? [] : _useContext$data,
      fields = _useContext.fields,
      rawConfigWithOverrides = _useContext.config,
      loading = _useContext.loading,
      totals = _useContext.totals;

  var theme = useContext(ThemeContext);

  if (!theme) {
    return React.createElement(ComponentsProvider, null, React.createElement(QueryFormatter, props));
  }

  if (loading) {
    return React.createElement(Space, {
      justifyContent: "center",
      p: "small"
    }, React.createElement(ProgressCircular, null));
  }

  if (data && rawConfigWithOverrides && fields) {
    var config = buildChartConfig({
      config: rawConfigWithOverrides,
      data: data,
      fields: fields
    });
    return React.cloneElement(children, {
      config: config,
      data: data,
      fields: fields,
      totals: formatTotals(totals),
      ok: ok
    });
  } else {
    return null;
  }
};
//# sourceMappingURL=QueryFormatter.js.map