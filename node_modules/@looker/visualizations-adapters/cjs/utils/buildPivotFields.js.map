{"version":3,"sources":["../../../src/utils/buildPivotFields.ts"],"names":["buildPivotFields","fields","pivots","fieldsCopy","measures","flatMap","key","pivotValue","is_total","map","measureField","pivotMeasureName","measureName","name","capitalizedPivotValue","toUpperCase","slice","label_short","pivoted_label","label"],"mappings":";;;;;;;;;;;;;;;;;;;AA2BA;;;;;;;;AAQO,MAAMA,gBAAgB,GAAG,CAAC;AAC/BC,EAAAA,MAD+B;AAE/BC,EAAAA;AAF+B,CAAD,KAM1B;AACJ,QAAMC,UAAU,qBAAQF,MAAR,CAAhB;;AAEAE,EAAAA,UAAU,CAACC,QAAX,GAAsBF,MAAM,CAACG,OAAP,CAAe,CAAC;AAAEC,IAAAA,GAAG,EAAEC,UAAP;AAAmBC,IAAAA;AAAnB,GAAD,KAAmC;AACtE,WAAOP,MAAM,CAACG,QAAP,CAAgBK,GAAhB,CAAoBC,YAAY,IAAI;AACzC,YAAMC,gBAAgB,GAAG,6BAAsB;AAC7CC,QAAAA,WAAW,EAAEF,YAAY,CAACG,IADmB;AAE7CN,QAAAA,UAAU,EAAEA;AAFiC,OAAtB,CAAzB;AAaA,YAAMO,qBAAqB,GAAGN,QAAQ,GAClC,eAAQ,WAAR,CADkC,GAElCD,UAAU,CAAC,CAAD,CAAV,CAAcQ,WAAd,KAA8BR,UAAU,CAACS,KAAX,CAAiB,CAAjB,CAFlC;AAIA,6CACKN,YADL;AAEEO,QAAAA,WAAW,EAAEH,qBAFf;AAGED,QAAAA,IAAI,EAAEF,gBAHR;AAIEO,QAAAA,aAAa,EAAG,GAAER,YAAY,CAACS,KAAM,KAAIL,qBAAsB;AAJjE;AAMD,KAxBM,CAAP;AAyBD,GA1BqB,CAAtB;AA4BA,SAAOX,UAAP;AACD,CAtCM","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { MeasureMetadata, Fields, Pivots } from '../types'\nimport { buildPivotMeasureName, i18Noop } from '.'\n\n/**\n * Creates a new fields metadata object, replacing the existing fields.measures\n * property with pivot metadata objects. These pivot metadata objects are identical\n * to normal measure metadata objects from the Looker SDK, but use the query's\n * pivot values to derive their label, key and other relevant metadata.\n */\nexport const buildPivotFields = ({\n  fields,\n  pivots,\n}: {\n  fields: Fields\n  pivots: Pivots\n}) => {\n  const fieldsCopy = { ...fields }\n\n  fieldsCopy.measures = pivots.flatMap(({ key: pivotValue, is_total }) => {\n    return fields.measures.map(measureField => {\n      const pivotMeasureName = buildPivotMeasureName({\n        measureName: measureField.name,\n        pivotValue: pivotValue,\n      })\n\n      /**\n       * For context, the API treats row totals on a pivot query like any other\n       * pivot value. This means the Looker API auto-appends the pivots metadata\n       * array with an object, with key \"$$$_row_total_$$$\". However, the API\n       * doesn't include any formatted labels with its response, so we'll need to\n       * check for the row totals pivot object and then create our own formatted\n       * label.\n       */\n      const capitalizedPivotValue = is_total\n        ? i18Noop('Row Total')\n        : pivotValue[0].toUpperCase() + pivotValue.slice(1)\n\n      return {\n        ...measureField,\n        label_short: capitalizedPivotValue,\n        name: pivotMeasureName,\n        pivoted_label: `${measureField.label}: ${capitalizedPivotValue}`,\n      } as MeasureMetadata\n    })\n  })\n\n  return fieldsCopy\n}\n"],"file":"buildPivotFields.js"}