{"version":3,"sources":["../../src/Query/Query.tsx"],"names":["React","useEffect","useState","useReducer","useCallback","values","get","buildPivotFields","isNumeric","tabularPivotResponse","tabularResponse","QueryContext","initialAsyncState","fetchQueryId","loading","responseOk","runCount","fetchQueryResult","fetchVisConfig","asyncStateReducer","state","action","type","value","name","currentState","initialDataState","queryId","data","visConfig","fields","pivots","shareUrl","totals","dataStateReducer","Query","query","children","sdk","configOverrides","config","error","setError","dataState","dispatchDataReducer","asyncState","dispatchAsyncReducer","Number","isLoading","some","v","isEveryResponseOk","every","isDataShapeValid","Boolean","measures","length","isDataValid","asyncLifecycle","request","Error","documentation_url","message","slug","query_for_slug","result","ok","vis_config","id","String","share_url","queryArgs","query_id","result_format","run_query","totals_data","dataCopy","fieldsCopy","dimensions","Array","from","undefined"],"mappings":"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","sourcesContent":["/*\n\n MIT License\n\n Copyright (c) 2021 Looker Data Sciences, Inc.\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in all\n copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n SOFTWARE.\n\n */\n\nimport type { FC, ReactNode } from 'react'\nimport React, { useEffect, useState, useReducer, useCallback } from 'react'\nimport values from 'lodash/values'\nimport get from 'lodash/get'\nimport type { IError, Looker40SDK } from '@looker/sdk'\nimport type { ISDKErrorResponse, ISDKSuccessResponse } from '@looker/sdk-rtl'\nimport {\n  buildPivotFields,\n  isNumeric,\n  tabularPivotResponse,\n  tabularResponse,\n} from '../utils'\nimport { QueryContext } from './QueryContext'\nimport type { SDKRecord, CAll, Fields, Pivots, Totals } from '../types'\n\ninterface QueryProps {\n  sdk: Looker40SDK\n  children: ReactNode\n  query?: number | string\n  /* Accept user defined config options to overwrite API response */\n  config?: Partial<CAll>\n}\n\ntype AsyncRequestNames = 'fetchQueryId' | 'fetchVisConfig' | 'fetchQueryResult'\ntype AsyncRequestMetadata = {\n  loading: boolean\n  responseOk: boolean\n  runCount: number\n}\n\ntype AsyncReducerAction =\n  | {\n      type: 'reset'\n    }\n  | {\n      type: 'update'\n      name: AsyncRequestNames\n      value: Partial<AsyncRequestMetadata>\n    }\n\ntype AsyncReducerState = Record<AsyncRequestNames, AsyncRequestMetadata>\n\nconst initialAsyncState: AsyncReducerState = {\n  fetchQueryId: { loading: false, responseOk: true, runCount: 0 },\n  fetchQueryResult: { loading: false, responseOk: true, runCount: 0 },\n  fetchVisConfig: { loading: false, responseOk: true, runCount: 0 },\n}\n\nfunction asyncStateReducer(\n  state: typeof initialAsyncState,\n  action: AsyncReducerAction\n): AsyncReducerState {\n  switch (action.type) {\n    case 'reset':\n      return initialAsyncState\n    case 'update': {\n      const { value, name } = action\n      const { runCount, ...currentState } = state[name]\n      return {\n        ...state,\n        [name]: { ...currentState, runCount: runCount + 1, ...value },\n      }\n    }\n  }\n}\n\ntype DataReducerState = {\n  queryId: null | number\n  data: null | SDKRecord[]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  visConfig: null | Record<string, any>\n  fields: null | Fields\n  pivots: null | Pivots\n  shareUrl: null | string\n  totals: null | Totals\n}\n\ntype DataReducerAction =\n  | {\n      type: 'reset'\n    }\n  | {\n      type: 'update'\n      value:\n        | { queryId: number }\n        | { data: SDKRecord[] }\n        | { visConfig: Partial<CAll> }\n        | { fields: Fields }\n        | { pivots: Pivots }\n        | { shareUrl: string }\n        | { totals: Totals }\n    }\n\nconst initialDataState: DataReducerState = {\n  queryId: null,\n  data: null,\n  visConfig: null,\n  fields: null,\n  pivots: null,\n  shareUrl: null,\n  totals: null,\n}\n\nfunction dataStateReducer(\n  state: typeof initialDataState,\n  action: DataReducerAction\n): DataReducerState {\n  switch (action.type) {\n    case 'reset':\n      return initialDataState\n    case 'update':\n      return { ...state, ...action.value }\n  }\n}\n\nexport const Query: FC<QueryProps> = ({\n  query,\n  children,\n  sdk,\n  config: configOverrides,\n}) => {\n  const [error, setError] = useState<IError>()\n\n  const [dataState, dispatchDataReducer] = useReducer(\n    dataStateReducer,\n    initialDataState\n  )\n\n  const [asyncState, dispatchAsyncReducer] = useReducer(\n    asyncStateReducer,\n    initialAsyncState\n  )\n\n  const {\n    data,\n    fields,\n    pivots,\n    totals,\n    visConfig,\n    shareUrl,\n    queryId,\n  } = dataState\n\n  // They passed in a query ID instead of query Slug. No need to request this from the server:\n  if (isNumeric(query) && !queryId) {\n    dispatchDataReducer({ type: 'update', value: { queryId: Number(query) } })\n  }\n\n  // derived accumulative state from all the various requests:\n  const isLoading = values(asyncState).some(v => v.loading === true)\n  const isEveryResponseOk = values(asyncState).every(v => v.responseOk === true)\n\n  const isDataShapeValid = Boolean(fields?.measures?.length)\n\n  const isDataValid = isEveryResponseOk && data?.length && isDataShapeValid\n\n  // reset reducer state when query prop changes\n  useEffect(() => {\n    dispatchAsyncReducer({ type: 'reset' })\n    dispatchDataReducer({ type: 'reset' })\n  }, [query, sdk])\n\n  // asyncLifecycle DRYs up common request workflow:\n  // 1. set loading state to true\n  // 2. dispatch fetch request\n  // 2a. catch error\n  // 3. set loading state to false\n  const asyncLifecycle = useCallback(\n    async (name: AsyncRequestNames, request: () => void) => {\n      // don't run if previous request is still pending\n      if (\n        asyncState[name].loading !== true &&\n        asyncState[name].runCount === 0 &&\n        isEveryResponseOk\n      ) {\n        dispatchAsyncReducer({ type: 'update', name, value: { loading: true } })\n        try {\n          await request()\n        } catch (error) {\n          if (!(error instanceof Error)) throw error\n          dispatchAsyncReducer({\n            type: 'update',\n            name,\n            value: { responseOk: false },\n          })\n          setError({\n            ...error,\n            documentation_url: 'https://docs.looker.com',\n            message: `${name}: ${error.message}`,\n          })\n        }\n        dispatchAsyncReducer({\n          type: 'update',\n          name,\n          value: { loading: false },\n        })\n      }\n    },\n    [dispatchAsyncReducer, setError, asyncState, isEveryResponseOk]\n  )\n\n  useEffect(() => {\n    const fetchQueryId = async (slug: string) => {\n      const result = await sdk.query_for_slug(slug, 'id, vis_config, share_url')\n\n      if (result.ok === false) {\n        dispatchAsyncReducer({\n          type: 'update',\n          name: 'fetchQueryId',\n          value: { responseOk: false },\n        })\n      }\n\n      if ('value' in result) {\n        const value = result.value\n        if ('vis_config' in value) {\n          dispatchDataReducer({\n            type: 'update',\n            value: { visConfig: value.vis_config as CAll },\n          })\n        }\n        if ('id' in value) {\n          dispatchDataReducer({\n            type: 'update',\n            value: { queryId: Number(value.id) },\n          })\n        }\n        if ('share_url' in value) {\n          dispatchDataReducer({\n            type: 'update',\n            value: { shareUrl: String(value.share_url) },\n          })\n        }\n      } else {\n        // render error state\n        setError({\n          ...error,\n          ...(result as ISDKErrorResponse<IError>).error,\n        })\n      }\n    }\n\n    if (query && !queryId) {\n      // assume user passed query slug instead of query id. fetch numeric ID and config from slug:\n      asyncLifecycle('fetchQueryId', () => fetchQueryId(query as string))\n    }\n  }, [query, error, asyncLifecycle, queryId, sdk])\n\n  // get full query response\n  useEffect(() => {\n    const fetchQueryResult = async (id: number) => {\n      const queryArgs = {\n        query_id: id,\n        result_format: 'json_detail',\n      }\n\n      const result = await sdk.run_query(queryArgs)\n\n      dispatchAsyncReducer({\n        type: 'update',\n        name: 'fetchQueryResult',\n        value: { responseOk: result.ok },\n      })\n\n      if (result.ok === false && result.error) {\n        // add query args to result for debugging purposes\n        result.error = { ...result.error, ...queryArgs }\n        setError((result as ISDKErrorResponse<IError>).error)\n      } else if (result.ok === true && result.value) {\n        const {\n          data,\n          fields,\n          pivots,\n          totals_data,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        } = (result as ISDKSuccessResponse<any>).value\n\n        dispatchDataReducer({\n          type: 'update',\n          value: { data, fields, pivots, totals: totals_data },\n        })\n      }\n    }\n\n    const fetchVisConfig = async (id: number) => {\n      const config = await sdk.query(id, 'vis_config, share_url')\n\n      const visConfig = get(config, 'value.vis_config')\n      const shareUrl = get(config, 'value.share_url')\n\n      if (visConfig) {\n        dispatchDataReducer({ type: 'update', value: { visConfig } })\n      } else {\n        dispatchAsyncReducer({\n          type: 'update',\n          name: 'fetchVisConfig',\n          value: { responseOk: false },\n        })\n      }\n\n      if (shareUrl) {\n        dispatchDataReducer({ type: 'update', value: { shareUrl } })\n      }\n    }\n\n    if (!!queryId && !data) {\n      asyncLifecycle('fetchQueryResult', () =>\n        fetchQueryResult(queryId as number)\n      )\n    }\n\n    if (!!queryId && !visConfig) {\n      asyncLifecycle('fetchVisConfig', () => fetchVisConfig(queryId as number))\n    }\n  }, [queryId, visConfig, data, asyncLifecycle, sdk])\n\n  let dataCopy: SDKRecord[] = []\n  let fieldsCopy: Fields = { dimensions: [], measures: [] }\n\n  if (isDataValid && fields) {\n    dataCopy = pivots\n      ? tabularPivotResponse({ data, fields, pivots })\n      : tabularResponse(Array.from(data))\n\n    fieldsCopy = pivots ? buildPivotFields({ fields, pivots }) : fields\n  }\n\n  return (\n    <QueryContext.Provider\n      value={{\n        config: { ...visConfig, ...configOverrides },\n        data: dataCopy,\n        error,\n        fields: fieldsCopy,\n        loading: isLoading,\n        ok: isEveryResponseOk,\n        shareUrl: shareUrl || undefined,\n        totals: totals || undefined,\n      }}\n    >\n      {children}\n    </QueryContext.Provider>\n  )\n}\n"],"file":"Query.js"}